name: check

on:
  pull_request:
    types: ["opened", "synchronize", "reopened"]
    paths:
      - "**.dart"
  workflow_dispatch:

# permissions:
#   contents: read
#   issues: write
#   pull-requests: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3

      - name: Parses fvm_config.json into environment variables
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: flutter pub get

      - name: Install matcher
        run: echo "::add-matcher::.github/analyzer-problem-matcher.json"

      - name: Run flutter analyze
        run: flutter analyze

      # - name: Remove matcher
      #   if: ${{ always() }}
      #   run: echo "::remove-matcher owner=dart-analyzer::"

      # - name: Setup Ruby
      #   uses: ruby/setup-ruby@v1
      #   if: ${{ failure() }}
      #   with:
      #     ruby-version: "3.2"
      #     bundler-cache: true

      # - name: Danger
      #   uses: MeilCli/danger-action@v5
      #   if: ${{ failure() }}
      #   with:
      #     plugins_file: "Gemfile"
      #     install_path: "vendor/bundle"
      #     danger_file: "Dangerfile"
      #     danger_id: "danger-pr"
      #   env:
      #     DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # test:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Run pre-process script
  #       shell: bash
  #       env:
  #         PREPROCESS_SCRIPT_BASE64: ${{ secrets.PREPROCESS_SCRIPT_BASE64 }}
  #       run: |
  #         if [ -n "$PREPROCESS_SCRIPT_BASE64" ]; then
  #           echo $PREPROCESS_SCRIPT_BASE64 | base64 --decode > ./pre-process.sh && bash ./pre-process.sh
  #         fi

  #     - name: Install Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"
  #         cache: true

  #     - name: Run flutter version
  #       run: flutter --version

  #     - name: Run flutter pub get
  #       run: flutter pub get

  #     - name: Run flutter test
  #       run: flutter test
